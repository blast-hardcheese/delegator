name: Deploy to Environment
# description: This workflow will deplioy a specific image build to a specified environment stack.

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment in which to deploy the API and DB Migrations images.'
        required: true
        type: string
      aws_region:
        description: 'The AWS Region in which to deploy the API and DB Migrations images.'
        required: true
        type: string
      app_image_tag:
        description: 'The Docker image tag of the API image to deploy.'
        type: string
        required: true
      do_dry_run:
        description: 'If true, then terragrunt apply will not be run -- only plan.  No changes will be made to our infrastructure.'
        default: true
        type: boolean 
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      CI_ACCESS_TOKEN:
        required: true

env:
  TERRAFORM_VER        : 1.3.2
  TERRAGRUNT_VER       : 0.39.1
  AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION           : ${{ inputs.aws_region }}
  ENV                  : ${{ inputs.environment }}
  IMAGE_TAG            : ${{ inputs.app_image_tag }}
  CI_ACCESS_TOKEN      : ${{ secrets.CI_ACCESS_TOKEN }}
  GITHUB_USER          : appreciate-ci

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install terraform and terragrunt
        run: |
          mkdir -p bin
          cd bin
          curl https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip \
            -o terraform.zip
          unzip terraform.zip
          chmod a+x terraform
          curl -L https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VER}/terragrunt_linux_amd64 \
            -o terragrunt
          chmod a+x terragrunt
      - name: Terraform Init
        run: |
          git config --global url."https://${GITHUB_USER}:${CI_ACCESS_TOKEN}@github.com/Appreciate-Stuff".insteadOf "https://github.com/Appreciate-Stuff"
          cd terraform/deploy/environments/${ENV}/${AWS_REGION}
          echo "Starting terraform"
          ${GITHUB_WORKSPACE}/bin/terragrunt init \
            --terragrunt-tfpath ${GITHUB_WORKSPACE}/bin/terraform
      - name: Terraform Plan
        run: |
          cd terraform/deploy/environments/${ENV}/${AWS_REGION}
          echo "Starting terraform"
          ${GITHUB_WORKSPACE}/bin/terragrunt plan \
            --terragrunt-tfpath ${GITHUB_WORKSPACE}/bin/terraform \
            -out=tfplan
      - name: Terraform Apply
        if: ${{ inputs.do_dry_run == false }}
        run: |
          cd terraform/deploy/environments/${ENV}/${AWS_REGION}
          echo "Starting terraform"
          ${GITHUB_WORKSPACE}/bin/terragrunt apply \
            --terragrunt-tfpath ${GITHUB_WORKSPACE}/bin/terraform \
            -auto-approve ./tfplan
