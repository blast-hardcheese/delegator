name: CI

on:
  push:
    branches-ignore:
      - master

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.CI_ACCESS_TOKEN }}

jobs:
  lint-build:
    name: Lint, Build, and Test
    uses: Appreciate-Stuff/appreciate-actions/.github/workflows/docker-build-push.yml@702581b456499eb972f07b093b325f5efaa7dbfd  # v0.1.1
    with:
      image_name: delegator
      build_args: |
        RUST_STAGE=debug
    secrets:
      AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  clippy:
    name: clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Set up build cache
        uses: swatinem/rust-cache@v2

      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run clippy check
        uses: actions-rs/clippy-check@v1
        if: steps.check_permissions.outputs.has-permission
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

#  Tarpaulin is a code coverage tool, but it can't differentiate between our
#  code and our library code, so it ends up rebuilding everything from scratch
#  every CI run.
#
#  Possibly enable this on merge to master, but we're not consuming these
#  metrics right now so disable it and save some build credits.
#
#  tarpaulin:
#    name: tarpaulin
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Install rust stable
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          override: true
#
#      - name: Set up build cache
#        uses: swatinem/rust-cache@v2
#
#      - name: Install tarpaulin
#        run: cargo install cargo-tarpaulin
#
#      - name: Run cargo tarpaulin
#        uses: actions-rs/cargo@v1
#        with:
#          command: tarpaulin

  check-terraform:
    uses: Appreciate-Stuff/appreciate-actions/.github/workflows/deploy.yml@72e9d028074d15065fc5830e34532a1b06a25df7 # v1.0.0
    if: github.secret_source == 'Actions'  # Dependabot has no access to AWS_*
    with:
      environment: stag
      aws_region : us-east-1
      image_tag  : this-is-not-a-valid-tag
      apply      : false
      migrations : false
    secrets:
      AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CI_ACCESS_TOKEN      : ${{ secrets.CI_ACCESS_TOKEN }}
