name: Build, Test, Push, Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment in which to deploy the App.'
        required: true
        type: string
      aws_region:
        description: 'The AWS Region in which to deploy.'
        default: us-east-1
        type: string
      ecr_host:
        description: 'The ECR hostname to which to deploy'
        default: 736898943770.dkr.ecr.us-east-1.amazonaws.com
        type: string
      app_image_name:
        description: 'The image name (default: delegator)'
        default: delegator
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      CI_ACCESS_TOKEN:
        required: true
      SENTRY_BEARER_TOKEN:
        required: true

env:
  MASTER_BRANCH        : master
  AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN         : ${{ secrets.CI_ACCESS_TOKEN }}
  AWS_REGION           : ${{ inputs.aws_region }}
  ECR_HOST             : ${{ inputs.ecr_host }}
  APP_IMAGE_NAME       : ${{ inputs.app_image_name }}
  APP_ECR_IMAGE        : ${{ inputs.ecr_host }}/${{ inputs.app_image_name }}
  SENTRY_BEARER_TOKEN  : ${{ secrets.SENTRY_BEARER_TOKEN }}
  ENV                  : ${{ inputs.environment }}

jobs:
  build-push:
    name: Build, push
    uses: Appreciate-Stuff/appreciate-actions/.github/workflows/docker-build-push.yml@dstewart/ONE-1003/reflow-github-actions
    with:
      image_name: delegator
      push: true
      build_args: |
        BASE_IMAGE=ubuntu
        BASE_IMAGE_TAG=latest
        RUST_STAGE=release
        CARGO_ARGS=--release
    secrets:
      AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # TODO: In a future update, we need to figure out how to integrate sentry
      # with rust and provide it our debugging symbols.  It looks like a fairly
      # involved job and is out of scope for now.  The general structure should
      # loosely follow what is below so this is being left in but commented out,
      # for now.

      # - name: Copy dist out of app container
      #   env:
      #     IMAGE_TAG: ${{ steps.image_tag.outputs.tag }}
      #   run: |
      #     docker create --name app ${APP_IMAGE_NAME}:latest
      #     docker cp app:/app/dist ./dist

      # - name: Sentry Release
      #   uses: getsentry/action-release@v1.2.0
      #   env:
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_BEARER_TOKEN }}
      #     SENTRY_ORG: appreciate-stuff
      #     SENTRY_PROJECT: delegator
      #   with:
      #     sourcemaps: './dist'
      #     ignore_missing: true
      #     version: ${{ steps.image_tag.outputs.tag }}

  call-deploy-to-env:
    uses: ./.github/workflows/mod-deploy-to-env.yml
    needs:
      - build-push
    with:
      environment  : ${{ inputs.environment }}
      aws_region   : ${{ inputs.aws_region }}
      app_image_tag: ${{ needs.build-push.outputs.tag }}
      do_dry_run   : false
    secrets:
      AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CI_ACCESS_TOKEN      : ${{ secrets.CI_ACCESS_TOKEN }}
